import org.apache.tools.ant.filters.ReplaceTokens

allprojects  {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven'
	apply plugin: 'war'
    apply plugin: 'typescript'
    
  	group = 'com.kopetto.sample'
  	version = '1.0'
  
	defaultTasks 'clean','war'
  	sourceCompatibility = 1.7
  	targetCompatibility = 1.7  
}

project.ext{
	springVersion='4.1.1.RELEASE'
	springSecurityVersion='3.2.5.RELEASE'
	thymeLeafVersion='2.2.2'
	jacksonVersion='2.2.2'
}

sourceCompatibility = 1.7
version = '1.0'

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:jacksonVersion

    compile (group: 'org.springframework.data', name: 'spring-data-mongodb', version:'1.2.0.RELEASE'){
    	exclude(module: 'org.mongodb')
    }
    compile group: 'org.mongodb', name: 'mongo-java-driver', version:'2.12.0'
    
    compile group: 'log4j', name: 'log4j', version:'1.2.14'
    
    compile group: 'org.aspectj', name: 'aspectjrt', version:'1.6.11'
    compile group: 'org.aspectj', name: 'aspectjweaver', version:'1.6.11'
    compile group: 'commons-collections', name: 'commons-collections', version:'3.2.1'
    compile group: 'org.apache.commons', name: 'commons-io', version:'1.3.2'
    
    compile(group: 'org.springframework', name: 'spring-core', version:springVersion) {
		exclude(module: 'commons-logging')
    }
    
    compile group: 'org.springframework', name: 'spring-context', version:springVersion
    compile group: 'org.springframework', name: 'spring-context-support', version:springVersion
    
    compile group: 'org.springframework', name: 'spring-aop', version:springVersion
    compile group: 'org.springframework', name: 'spring-aspects', version:springVersion
    compile group: 'org.springframework', name: 'spring-tx', version:springVersion
    compile group: 'org.springframework', name: 'spring-jdbc', version:springVersion
    compile group: 'org.springframework', name: 'spring-web', version:springVersion
    compile group: 'org.springframework', name: 'spring-orm', version:springVersion
    
    compile(group: 'org.springframework', name: 'spring-webmvc', version:springVersion) {
		exclude(module: 'commons-logging')
    }

	//spring security    
    compile group: 'org.springframework.security', name: 'spring-security-core', version:springSecurityVersion
    compile group: 'org.springframework.security', name: 'spring-security-config', version:springSecurityVersion
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version:springSecurityVersion
    compile group: 'org.springframework.security', name: 'spring-security-web', version:springSecurityVersion
	compile("org.springframework.security.oauth:spring-security-oauth2:2.0.6.RELEASE")

    compile  'org.apache.httpcomponents:httpclient:4.3.5'
    
    providedCompile group:'javax.servlet', name:'javax.servlet-api',version:'3.1.0'
    
    compile group: 'cglib', name: 'cglib-nodep', version:'2.1_3'
    compile group: 'com.restfb', name: 'restfb', version:'1.6.12'
  
    compile group: 'log4j', name: 'log4j', version:'1.2.14'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.6.4'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.6.4'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version:'1.6.4'
    
    compile group: 'net.sf.ehcache', name: 'ehcache-core', version:'2.5.0'

    compile 'javax.servlet:jstl:1.2'

	//thymeleaf templating    
    compile group: 'org.thymeleaf', name: 'thymeleaf', version:'2.1.2.RELEASE'
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring3', version:'2.1.2.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity3', version:'2.1.0.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-tiles2-spring3', version:'2.1.1.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-conditionalcomments', version:'2.1.0.RELEASE'
    compile group: 'org.apache.tiles', name: 'tiles-core', version:thymeLeafVersion
    compile group: 'org.apache.tiles', name: 'tiles-api', version:thymeLeafVersion
    compile group: 'org.apache.tiles', name: 'tiles-template', version:thymeLeafVersion
    compile group: 'org.apache.tiles', name: 'tiles-servlet', version:thymeLeafVersion
    compile group: 'org.apache.tiles', name: 'tiles-jsp', version:thymeLeafVersion

    testCompile(group: 'org.springframework', name: 'spring-test', version:springVersion) {
		exclude(module: 'commons-logging')
    }

    testCompile group: 'junit', name: 'junit', version:'4.11'
    
}

test {
}

repositories {
    mavenLocal ()
    mavenCentral ()
    
    maven {
        url 'https://github.com/sothmann/typescript-gradle-plugin/raw/mavenrepo/'
    }
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url 'https://github.com/sothmann/typescript-gradle-plugin/raw/mavenrepo/' }
    
}

buildscript {

    repositories {
	    mavenLocal ()
	    mavenCentral ()
	    
        maven {
            url 'https://github.com/sothmann/typescript-gradle-plugin/raw/mavenrepo/'
        }
	    maven { url "http://repo.spring.io/libs-snapshot" }
	    maven { url 'https://github.com/sothmann/typescript-gradle-plugin/raw/mavenrepo/' }
	    
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:typescript-gradle-plugin:1.0.5'
    }
    
}

compileTypeScript {
    sourcemap = true
    source = 'src/main/ts'
}

war {
 	dependsOn 'compileTypeScript'
	archiveName="sample.war"
	
	//copy generated JS into resources
	into("resources/module/common") {
		from compileTypeScript.outputs
	} 
}


////////////////////////////////
//Tests
////////////////////////////////

//make sure we have defined selenium_url
if (!project.hasProperty("selenium_url")) {
    ext.selenium_url = 'http://localhost:4444/wd/hub'
}

//main task to run protractor tests
task uiTests << {
	println "Starting protractor tests"
}

//start selenimu, then run protractor
uiTests.dependsOn 'startSelenium', 'runProtractor'

//start Selenium server
task startSelenium << {
    println "Starting Selenium..."
    ant.exec(executable: 'cmd', spawn: true) {
        arg(value:'/c')
        arg(value:'webdriver-manager')
        arg(value:'start')
    }
}

//run protractor
task runProtractor(type:Exec) {
    commandLine 'cmd','/c','protractor','build/protractor/protractor.conf.js', '--suite=smoke'
}
runProtractor.dependsOn 'setupProtractorConfig'

//copy protractor config and replace all placeholders
task setupProtractorConfig() <<{

 	def dir = new File("build/protractor");
 	if (! dir.exists ()){
 		dir.mkdirs ();
 	};
 	
    copy {
	 	
        from files ('src/main/resources/protractor/protractor.conf.js', 'src/main/resources/protractor/protractor.onload.js')
        into 'build/protractor'
        filter(ReplaceTokens, tokens: [
        					SELENIUM_URL: selenium_url,
        					APP_URL:app_url
        					])
    }

    copy {
        from 'src/main/protractor/tests'
        into 'build/protractor/tests'
        filter(ReplaceTokens, tokens: [
        					SELENIUM_URL: selenium_url,
        					APP_URL:app_url
        					])
    }
    
    copy {
        from 'src/main/protractor/pages'
        into 'build/protractor/pages'
        filter(ReplaceTokens, tokens: [
        					SELENIUM_URL: selenium_url,
        					APP_URL:app_url
        					])
    }
}
